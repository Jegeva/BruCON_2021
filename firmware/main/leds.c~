#include "leds.h"
#include "driver/ledc.h"
#include "esp_err.h"
#define PIN_LR CONFIG_LED_R_PIN
#define PIN_LG CONFIG_LED_G_PIN
#define PIN_LB CONFIG_LED_B_PIN

char inited=0;
uint16_t sin_col[1024]={
0,3,6,9,12,15,18,21,25,28,31,34,37,40,43,47,50,53,56,59,62,65,69,72,75,78,81,84,87,90,94,97,100,103,106,109,112,115,119,122,125,128,131,134,137,140,144,147,150,153,156,159,162,165,168,171,175,178,181,184,187,190,193,196,199,202,205,209,212,215,218,221,224,227,230,233,236,239,242,245,248,251,254,257,260,264,267,270,273,276,279,282,285,288,291,294,297,300,303,306,309,312,315,318,321,324,327,330,333,336,339,342,344,347,350,353,356,359,362,365,368,371,374,377,380,383,386,388,391,394,397,400,403,406,409,412,414,417,420,423,426,429,432,434,437,440,443,446,449,451,454,457,460,463,466,468,471,474,477,479,482,485,488,491,493,496,499,501,504,507,510,512,515,518,521,523,526,529,531,534,537,539,542,545,547,550,553,555,558,561,563,566,568,571,574,576,579,581,584,587,589,592,594,597,599,602,604,607,609,612,615,617,620,622,625,627,629,632,634,637,639,642,644,647,649,652,654,656,659,661,664,666,668,671,673,675,678,680,683,685,687,690,692,694,696,699,701,703,706,708,710,712,715,717,719,721,724,726,728,730,732,735,737,739,741,743,745,748,750,752,754,756,758,760,762,765,767,769,771,773,775,777,779,781,783,785,787,789,791,793,795,797,799,801,803,805,807,809,811,813,814,816,818,820,822,824,826,828,829,831,833,835,837,839,840,842,844,846,847,849,851,853,854,856,858,860,861,863,865,866,868,870,871,873,875,876,878,879,881,883,884,886,887,889,890,892,894,895,897,898,900,901,903,904,906,907,908,910,911,913,914,916,917,918,920,921,922,924,925,927,928,929,930,932,933,934,936,937,938,939,941,942,943,944,946,947,948,949,950,951,953,954,955,956,957,958,959,960,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,978,979,980,981,982,983,984,985,986,986,987,988,989,990,990,991,992,993,994,994,995,996,997,997,998,999,999,1000,1001,1001,1002,1003,1003,1004,1004,1005,1006,1006,1007,1007,1008,1008,1009,1009,1010,1010,1011,1011,1012,1012,1013,1013,1014,1014,1015,1015,1015,1016,1016,1017,1017,1017,1018,1018,1018,1019,1019,1019,1019,1020,1020,1020,1020,1021,1021,1021,1021,1022,1022,1022,1022,1022,1022,1023,1023,1023,1023,1023,1023,1023,1023,1023,1023,1023,1023,1023,1023,1024,1023,1023,1023,1023,1023,1023,1023,1023,1023,1023,1023,1023,1023,1023,1022,1022,1022,1022,1022,1022,1021,1021,1021,1021,1020,1020,1020,1020,1019,1019,1019,1019,1018,1018,1018,1017,1017,1017,1016,1016,1015,1015,1015,1014,1014,1013,1013,1012,1012,1011,1011,1010,1010,1009,1009,1008,1008,1007,1007,1006,1006,1005,1004,1004,1003,1003,1002,1001,1001,1000,999,999,998,997,997,996,995,994,994,993,992,991,990,990,989,988,987,986,986,985,984,983,982,981,980,979,978,978,977,976,975,974,973,972,971,970,969,968,967,966,965,964,963,962,960,959,958,957,956,955,954,953,951,950,949,948,947,946,944,943,942,941,939,938,937,936,934,933,932,930,929,928,927,925,924,922,921,920,918,917,916,914,913,911,910,908,907,906,904,903,901,900,898,897,895,894,892,890,889,887,886,884,883,881,879,878,876,875,873,871,870,868,866,865,863,861,860,858,856,854,853,851,849,847,846,844,842,840,839,837,835,833,831,829,828,826,824,822,820,818,816,814,813,811,809,807,805,803,801,799,797,795,793,791,789,787,785,783,781,779,777,775,773,771,769,767,765,762,760,758,756,754,752,750,748,745,743,741,739,737,735,732,730,728,726,724,721,719,717,715,712,710,708,706,703,701,699,696,694,692,690,687,685,683,680,678,675,673,671,668,666,664,661,659,656,654,652,649,647,644,642,639,637,634,632,629,627,625,622,620,617,615,612,609,607,604,602,599,597,594,592,589,587,584,581,579,576,574,571,568,566,563,561,558,555,553,550,547,545,542,539,537,534,531,529,526,523,521,518,515,512,510,507,504,501,499,496,493,491,488,485,482,479,477,474,471,468,466,463,460,457,454,451,449,446,443,440,437,434,432,429,426,423,420,417,414,412,409,406,403,400,397,394,391,388,386,383,380,377,374,371,368,365,362,359,356,353,350,347,344,342,339,336,333,330,327,324,321,318,315,312,309,306,303,300,297,294,291,288,285,282,279,276,273,270,267,264,260,257,254,251,248,245,242,239,236,233,230,227,224,221,218,215,212,209,205,202,199,196,193,190,187,184,181,178,175,171,168,165,162,159,156,153,150,147,144,140,137,134,131,128,125,122,119,115,112,109,106,103,100,97,94,90,87,84,81,78,75,72,69,65,62,59,56,53,50,47,43,40,37,34,31,28,25,21,18,15,12,9,6,3};

const uint16_t gamma_table[1024] = {
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7, 7, 8, 8, 8, 8, 8, 8, 8, 9, 9, 9, 9, 9, 9, 10, 10, 10, 10, 10, 10, 11, 11, 11, 11, 11, 11, 12, 12, 12, 12, 12, 13, 13, 13, 13, 13, 14, 14, 14, 14,14, 15, 15, 15, 15, 15, 16, 16, 16, 16, 17, 17, 17, 17, 17, 18, 18, 18, 18, 19, 19, 19, 19, 20, 20, 20, 20, 21, 21, 21, 21, 22, 22, 22, 22, 23, 23, 23, 23, 24, 24, 24, 25, 25, 25, 25, 26, 26, 26, 27, 27, 27, 27, 28, 28, 28, 29, 29, 29, 30, 30, 30, 30, 31, 31, 31, 32, 32, 32, 33, 33, 33, 34, 34, 34, 35, 35, 35, 36, 36, 36, 37, 37, 38, 38, 38, 39, 39, 39, 40, 40, 40, 41, 41, 42, 42, 42, 43, 43, 43, 44, 44, 45, 45, 45, 46, 46, 47, 47, 47, 48, 48, 49, 49, 49, 50, 50, 51, 51, 52, 52, 52, 53, 53, 54, 54, 55, 55, 55, 56, 56, 57, 57, 58, 58, 59, 59, 60, 60, 60, 61, 61, 62, 62, 63, 63, 64, 64, 65, 65, 66, 66, 67, 67, 68, 68, 69, 69, 70, 70, 71, 71, 72, 72, 73, 73, 74, 74, 75, 75, 76, 76, 77, 77, 78, 79, 79, 80, 80, 81, 81, 82, 82, 83, 83, 84, 85, 85, 86, 86, 87, 87, 88, 89, 89, 90, 90, 91, 92, 92, 93, 93, 94, 94, 95, 96, 96, 97, 98, 98, 99, 99, 100, 101, 101, 102, 102, 103, 104, 104, 105, 106, 106, 107, 108, 108, 109, 109, 110, 111, 111, 112, 113, 113, 114, 115, 115, 116, 117, 117, 118, 119, 119, 120, 121, 122, 122, 123, 124, 124, 125, 126, 126, 127, 128, 129, 129, 130, 131, 131, 132, 133, 134, 134, 135, 136, 137, 137, 138, 139, 139, 140, 141, 142, 142, 143, 144, 145, 146, 146, 147, 148, 149, 149, 150, 151, 152, 153, 153, 154, 155, 156, 156, 157, 158, 159, 160, 160, 161, 162, 163, 164, 165, 165, 166, 167, 168, 169, 169, 170, 171, 172, 173, 174, 175, 175, 176, 177, 178, 179, 180, 181, 181, 182, 183, 184, 185, 186, 187, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 196, 197, 198, 199, 200, 201, 202,203, 204, 205, 206, 207, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 285, 287, 288, 289, 290, 291, 292, 293, 294, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 311, 312, 313, 314, 315, 316, 318, 319, 320, 321, 322, 324, 325, 326, 327, 328, 330, 331, 332, 333, 335, 336, 337, 338, 339, 341, 342, 343, 344, 346, 347, 348, 349, 351, 352, 353, 354, 356, 357, 358, 360, 361, 362, 363, 365, 366, 367, 369, 370, 371, 372, 374, 375, 376, 378, 379, 380, 382, 383, 384, 386, 387, 388, 390, 391, 392, 394, 395, 396, 398, 399, 400, 402, 403, 404, 406, 407, 408, 410, 411, 413, 414, 415, 417, 418, 419, 421, 422, 424, 425, 426, 428, 429, 431, 432, 434, 435, 436, 438, 439, 441, 442, 443, 445, 446, 448, 449, 451, 452, 454, 455, 457, 458, 459, 461, 462, 464, 465, 467, 468, 470, 471, 473, 474, 476, 477, 479, 480, 482, 483, 485, 486, 488, 489, 491, 492, 494, 495, 497, 498, 500, 501, 503, 505, 506, 508, 509, 511, 512, 514,515, 517, 519, 520, 522, 523, 525, 526, 528, 530, 531, 533, 534, 536, 538, 539, 541, 542, 544, 546, 547, 549, 550, 552, 554, 555, 557, 559, 560, 562, 563, 565, 567, 568, 570, 572, 573, 575, 577, 578, 580, 582, 583, 585, 587, 588, 590, 592, 593, 595, 597, 599, 600, 602, 604, 605, 607, 609, 611, 612, 614, 616, 617, 619, 621, 623, 624, 626, 628, 630, 631, 633, 635, 637, 638, 640, 642, 644, 645, 647, 649, 651, 653, 654, 656, 658, 660, 662, 663, 665, 667, 669, 671, 672, 674, 676, 678, 680, 681, 683, 685, 687, 689, 691, 692, 694, 696, 698, 700, 702, 704, 705, 707, 709, 711, 713, 715, 717, 719, 720, 722, 724, 726, 728, 730, 732, 734, 736, 738, 739, 741, 743, 745, 747, 749, 751, 753, 755, 757, 759, 761, 763, 765, 767, 769, 771, 772, 774, 776, 778, 780, 782, 784, 786, 788, 790, 792, 794, 796, 798, 800, 802, 804, 806, 808, 810, 812, 814, 816, 818, 820, 822, 824, 826, 829, 831, 833, 835, 837, 839, 841, 843, 845, 847, 849, 851, 853, 855, 857, 859, 862, 864, 866, 868, 870, 872, 874, 876, 878, 880, 883, 885, 887, 889, 891, 893, 895, 897, 900, 902, 904, 906, 908, 910, 913, 915, 917, 919, 921, 923, 926, 928, 930, 932, 934, 936, 939, 941, 943, 945, 947, 950, 952, 954, 956, 958, 961, 963, 965, 967, 970, 972, 974, 976, 979, 981, 983, 985, 988, 990, 992, 994, 997,999, 1001, 1003, 1006, 1008, 1010, 1013, 1015, 1017, 1019, 1022, 1024,};


#define MAP_8_TO_10_BITS(p) (((unsigned int)p)*1023)/255

ledc_timer_config_t ledc_timer = {
  .duty_resolution = LEDC_TIMER_10_BIT, // resolution of PWM duty
  .freq_hz = 5000,                      // frequency of PWM signal
  .speed_mode = LEDC_HIGH_SPEED_MODE,           // timer mode
  .timer_num = LEDC_TIMER_0,            // timer index
  .clk_cfg = LEDC_AUTO_CLK,              // Auto select the source clock
};

ledc_channel_config_t ledc_channel[3] = {
          {
            .channel    = LEDC_CHANNEL_0,
            .duty       = 0,
            .gpio_num   = PIN_LR,
            .speed_mode = LEDC_HIGH_SPEED_MODE,
            .hpoint     = 0,
            .timer_sel  = LEDC_TIMER_0
        },
        {
            .channel    = LEDC_CHANNEL_1,
            .duty       = 0,
            .gpio_num   = PIN_LG,
            .speed_mode = LEDC_HIGH_SPEED_MODE,
            .hpoint     = 0,
            .timer_sel  = LEDC_TIMER_0
        },
	{
            .channel    = LEDC_CHANNEL_2,
            .duty       = 0,
            .gpio_num   = PIN_LB,
            .speed_mode = LEDC_HIGH_SPEED_MODE,
            .hpoint     = 0,
            .timer_sel  = LEDC_TIMER_0
        }
       

};

void init_leds(void){
  ESP_ERROR_CHECK(ledc_timer_config(&ledc_timer));
  for (int ch = 0; ch < 3; ch++) {
    ESP_ERROR_CHECK( ledc_channel_config(&ledc_channel[ch]));
  }
  inited = 1;
}


void set_rgb(unsigned short r,unsigned short g,unsigned short b){
  if(inited == 0)
    init_leds();
  ESP_ERROR_CHECK(ledc_set_duty(ledc_channel[0].speed_mode, ledc_channel[0].channel,r));
  ESP_ERROR_CHECK(ledc_update_duty(ledc_channel[0].speed_mode, ledc_channel[0].channel));
  ESP_ERROR_CHECK(ledc_set_duty(ledc_channel[1].speed_mode, ledc_channel[1].channel,g));
  ESP_ERROR_CHECK(ledc_update_duty(ledc_channel[1].speed_mode, ledc_channel[1].channel));
  ESP_ERROR_CHECK(ledc_set_duty(ledc_channel[2].speed_mode, ledc_channel[2].channel,b));
  ESP_ERROR_CHECK(ledc_update_duty(ledc_channel[2].speed_mode, ledc_channel[2].channel));  
}

void set_rgb8(unsigned char r,unsigned char g,unsigned char b){
  printf("r8 %d %d %d %d %d %d !\n",r,g,b, MAP_8_TO_10_BITS(r),MAP_8_TO_10_BITS(g),MAP_8_TO_10_BITS(b));
  set_rgb( MAP_8_TO_10_BITS(r),MAP_8_TO_10_BITS(g),MAP_8_TO_10_BITS(b));
}

void set_rgb32(unsigned int c){
  set_rgb8((c&0xff0000)>>16,(c&0xff00)>>8,c&0xff);  
}  


int wheelrank=0;
int power = 256;
int power_raise = 1;
int lin_corr_r=924;
int lin_corr_g=1024;
int lin_corr_b=812;
void setwheel(void){
  set_rgb(

	  gamma_table[((sin_col[(wheelrank    )     ]*power)/1024)*lin_corr_r/1024],
	  gamma_table[((sin_col[(wheelrank+321)%1024]*power)/1024)*lin_corr_g/1024],
	  gamma_table[((sin_col[(wheelrank+681)%1024]*power)/1024)*lin_corr_b/1024]
	  
	  );
  

}

void set_wheelrank(int rank){
  wheelrank=(rank)%1024;
  setwheel();
}

void nextwheel(int inc){
  set_wheelrank(wheelrank+inc);
}


void nextwheelpow(int inc){
  if(power_raise){
    power += inc;
  }else{
    power -= inc;
  }
  if(power > 1024){
    power = 1024-(power-1024);
    power_raise = !power_raise;
  }
  if(power < 0){
    power = -power;
    power_raise = !power_raise;
  }
  
  set_wheelrank(wheelrank);
}

